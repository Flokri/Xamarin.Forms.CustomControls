# set the version numbering, this results in 0.0.1 for the first build incrementing that way.
name: 0.1$(rev:.r)

trigger:
  branches:
    include:
      - release
  
  paths:
    exclude:
      - readme.md
      - ci-customcontrols.yml
      - cd-customcontrols.yml

stages:

- stage: 'Build'

  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'
      demands: msbuild

    workspace:
      clean: all

    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.9.3'
      inputs:
        versionSpec: 4.9.3

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'src\**\*.sln'

    - task: MSBuild@1
      displayName: 'Build beta'
      inputs:
        solution: src/Xamarin.Forms.CustomControls/Xamarin.Forms.CustomControls.csproj
        msbuildArguments: '/t:restore;build;pack /p:PackageVersion=$(Build.BuildNumber)-beta /p:PackageOutputPath=$(build.artifactstagingdirectory)/beta /p:AssemblyFileVersion=$(Build.BuildNumber)  '
        clean: true

    - task: MSBuild@1
      displayName: 'Build final'
      inputs:
        solution: src/Xamarin.Forms.CustomControls/Xamarin.Forms.CustomControls.csproj
        msbuildArguments: '/t:restore;build;pack /p:PackageVersion=$(Build.BuildNumber) /p:PackageOutputPath=$(build.artifactstagingdirectory)/final /p:AssemblyFileVersion=$(Build.BuildNumber) '
        clean: true

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'


- stage: 'PublishPrereleaseNuGetPackage'
  displayName: 'Publish Prerelease NuGet Package'
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'drop'

        
- stage: 'PublishReleaseNuGetPackage'
  displayName: 'Publish Release NuGet Package'
  dependsOn: 'PublishPrereleaseNuGetPackage'
  condition: succeeded()
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'nuget-org'
    strategy:
     runOnce:
       deploy:
         steps:
         - checkout: none

         - download: current
           artifact: 'drop'
           
         - task: NuGetCommand@2
           displayName: 'Push NuGet Package'
           inputs:
             command: 'push'
             packagesToPush: '$(Pipeline.Workspace)/drop/releases/*.nupkg'
             nuGetFeedType: 'external'
             publishFeedCredentials: 'NuGet'